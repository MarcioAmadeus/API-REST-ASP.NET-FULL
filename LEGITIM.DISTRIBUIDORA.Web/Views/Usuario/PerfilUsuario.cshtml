@model LEGITIM.DISTRIBUIDORA.Web.Models.Usuarios.PerfilUsuarioViewModel
@using LEGITIM.DISTRIBUIDORA.Web.Utils.Usuarios

@{
    ViewBag.Title = "Perfil do Usuário";
    var Aviso = ViewBag.Aviso;
    var Perfis = ViewBag.Perfis;
    var Origem = ViewBag.Origem;
}

@if (Aviso != null)
{
    <div class="alert alert-danger" role="alert">
        @Aviso
    </div>
}

@using (Html.BeginForm("PerfilUsuario", "Usuario", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="row ">
        <div class="col-md-6">
            <div class="form-group ">
                @Html.LabelFor(model => model.Perfil, htmlAttributes: new { @class = "control-label" })
                <br />
                @Html.TextBoxFor(model => model.Perfil, new { @class = "form-control ", disabled = "disabled" })
            </div>
            <div class="form-group ">
                @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label" })
                <br />
                @Html.TextBoxFor(model => model.Login, new { @class = "form-control", disabled = "disabled" })
            </div>
            <div class="form-group ">
                @Html.LabelFor(model => model.UsuarioNome, htmlAttributes: new { @class = "control-label" })
                <br />
                @Html.TextBoxFor(model => model.UsuarioNome, new { @class = "form-control ", disabled = "disabled" })
            </div>
            <div class="form-group ">
                @Html.LabelFor(model => model.ProgramasNome, htmlAttributes: new { @class = "control-label" })
                <br />
                @foreach (var nome in Model.ProgramasNome)
                {
                    @Html.TextBoxFor(model => nome, new { @class = "form-control ", disabled = "disabled" })
                }
            </div>
            @if (UsuarioAtual.UsuarioProfessor() || UsuarioAtual.UsuarioCoorPrograma())
            {
                <div class="form-group ">
                    @Html.LabelFor(model => model.LattesLink, htmlAttributes: new { @class = "control-label" })<span style="color:red;"> *</span>
                    <br />
                    @Html.TextBoxFor(model => model.LattesLink, new { @class = "form-control formfield", disabled = "disabled" })
                    <button type="button" class="btn btn-primary btn-xs" data-toggle="modal" data-target="#lattes"><span><i class="fa fa-edit"></i>Editar</span></button>
                    @if (Model.LattesLink != null)
                    {
                        <a href="@Url.Action("DetalhaLattesProfessor","Professor", new { professorId=Model.professorId })" class="btn btn-info btn-xs"><span><i class="fa fa-eye"></i>Detalhar Lattes</span></a>
                    }
                </div>
            }
        </div>
        @if (UsuarioAtual.UsuarioAluno() || (UsuarioAtual.UsuarioAdmSistema() && Origem == "Lista") ||
                                (UsuarioAtual.UsuarioAdmPrograma() && Origem == "Lista") ||
                                (UsuarioAtual.UsuarioCoorPrograma() && Origem == "Lista") ||
                                (UsuarioAtual.UsuarioRegulacao() && Origem == "Lista") ||
                                (UsuarioAtual.UsuarioProfessor() && Origem == "Lista"))
        {
            <div class="col-md-6 bg-warning border-region">
                <h3 class="text-center">@Model.DATASIMPORTANTES</h3>
                <div class="form-group ">
                    @Html.LabelFor(model => model.DataInicioPreProjeto, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="input-group">
                        <div class="input-group-addon">Início:</div>
                        @Html.TextBoxFor(model => model.DataInicioPreProjeto, new { @class = "form-control", disabled = "disabled" })
                    </div>
                    <div class="input-group">
                        <div class="input-group-addon">Fim:</div>
                        @Html.TextBoxFor(model => model.DataFimPreProjetoSubmissao, new { @class = "form-control ", disabled = "disabled" })
                    </div>

                </div>
                <div class="form-group ">
                    @Html.LabelFor(model => model.DataInicioProjeto, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="input-group">
                        <div class="input-group-addon">Início:</div>
                        @Html.TextBoxFor(model => model.DataInicioProjeto, new { @class = "form-control ", disabled = "disabled" })
                    </div>
                    <div class="input-group">
                        <div class="input-group-addon">Fim:</div>
                        @Html.TextBoxFor(model => model.DataFimProjetoSubmissao, new { @class = "form-control ", disabled = "disabled" })
                    </div>
                </div>
                <div class="form-group ">
                    @Html.LabelFor(model => model.DataInicioPreliminar, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="input-group">
                        <div class="input-group-addon">Início:</div>
                        @Html.TextBoxFor(model => model.DataInicioPreliminar, new { @class = "form-control ", disabled = "disabled" })
                    </div>
                    <div class="input-group">
                        <div class="input-group-addon">Fim:</div>
                        @Html.TextBoxFor(model => model.DataFimPreliminarSubmissao, new { @class = "form-control ", disabled = "disabled" })
                    </div>
                </div>

                <div class="form-group ">
                    @Html.LabelFor(model => model.DataInicioBanca, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="input-group">
                        <div class="input-group-addon">Início:</div>
                        @Html.TextBoxFor(model => model.DataInicioBanca, new { @class = "form-control ", disabled = "disabled" })
                    </div>
                    <div class="input-group">
                        <div class="input-group-addon">Fim:</div>
                        @Html.TextBoxFor(model => model.DataFimBancaSubmissao, new { @class = "form-control ", disabled = "disabled" })
                    </div>
                </div>
            </div>
        }
    </div>

    if (UsuarioAtual.UsuarioAluno() ||
          (UsuarioAtual.UsuarioAdmSistema() && Origem == "Lista") ||
                        (UsuarioAtual.UsuarioAdmPrograma() && Origem == "Lista") ||
                        (UsuarioAtual.UsuarioCoorPrograma() && Origem == "Lista") ||
                        (UsuarioAtual.UsuarioRegulacao() && Origem == "Lista" ||
                        (UsuarioAtual.UsuarioProfessor() && Origem == "Lista")
                        )
        )
    {
        <div class="form-group ">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })<span style="color:red;"> *</span>
            <br />
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control formfield", disabled = "disabled" })
            <button type="button" class="btn btn-primary btn-xs" data-toggle="modal" data-target="#email"><span><i class="fa fa-edit"></i>Editar</span></button>
        </div>

        <div class="form-group ">
            @Html.LabelFor(model => model.LattesLink, htmlAttributes: new { @class = "control-label" })<span style="color:red;"> *</span>
            <br />
            @Html.TextBoxFor(model => model.LattesLink, new { @class = "form-control formfield", disabled = "disabled" })
            <button id="lattesId" type="button" class="btn btn-primary btn-xs" data-toggle="modal" data-target="#lattes"><span><i class="fa fa-edit"></i>Editar</span></button>
            @if (Model.LattesLink != null)
            {
                <a href="@Url.Action("DetalhaLattesAluno","Aluno", new { alunoId = Model.alunoId })" class="btn bt class="btn btn-info btn-xs"><span><i class="fa fa-eye"></i>Detalhar Lattes</span></a>
            }
        </div>
        <br />

        <h3>@Model.FLUXODEETAPAS</h3>

        <table class="table table-bordered table-striped ">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Matricula)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SituacaoPreProjetoComData)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.OrientadorComSituacaoData)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SituacaoProjetoComData)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SituacaoBancaComData)
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr id="item">
                    <td>
                        @Model.Matricula
                    </td>
                    <td>
                        @if (Model.ProjetoId != 0)
                    {
                            <a href="@Url.Action("DetalharPreProjeto", "PreProjeto" , new { projetoId = Model.ProjetoId })" data-toggle="tooltip" data-placement="top" title="Detalhar">@Model.SituacaoPreProjetoComData</a>
                        }
                        else
                        {
                            @Model.SituacaoPreProjetoComData
                        }
                    </td>
                    <td>
                        @Model.OrientadorComSituacaoData
                    </td>
                    <td>
                        @if (Model.Path != null)
                    {
                            <a href="@Url.Action("download", "Basic" , new { name=Model.Path, directory="~/Content/projetos" })" data-toggle="tooltip" data-placement="top" title="Download">@Model.SituacaoProjetoComData</a>
                        }
                        else
                        {
                            @Model.SituacaoProjetoComData
                        }
                    </td>
                    <td>
                        @if (Model.BancaId != 0)
                    {
                            <a href="@Url.Action("DetalharBanca", "Banca" , new { bancaId=Model.BancaId })" data-toggle="tooltip" data-placement="top" title="Detalhar">@Model.SituacaoBancaComData</a>
                        }
                        else
                        {
                            @Model.SituacaoBancaComData
                        }
                    </td>
                </tr>
            </tbody>
        </table>
        <br />


        <ul class="list-inline">
            <li>
                <h3>@Model.VINCULOTRABALHO</h3>
            </li>
            <li>
                <button type="button" class="btn btn-primary btn-xs" data-toggle="modal" data-target="#vinculo"><span><i class="fa fa-edit"></i>Editar</span></button>
            </li>
        </ul>
        <div id="vinculo_data_show">
            <div class="form-group ">
                @Html.LabelFor(model => model.EnderecoProfissional, htmlAttributes: new { @class = "control-label" })
                <br />
                @Html.TextBoxFor(model => model.EnderecoProfissional, new { @class = "form-control formfield", disabled = "disabled" })
            </div>
            <div class="form-group ">
                @Html.LabelFor(model => model.Cargo, htmlAttributes: new { @class = "control-label" })
                <br />
                @Html.TextBoxFor(model => model.Cargo, new { @class = "form-control formfield", disabled = "disabled" })
            </div>
            <div class="form-group ">
                @Html.LabelFor(model => model.TipoVinculo, htmlAttributes: new { @class = "control-label" })
                <br />
                @Html.TextBoxFor(model => model.TipoVinculo, new { @class = "form-control formfield", disabled = "disabled" })
            </div>
            <div class="form-group ">
                @Html.LabelFor(model => model.TipoInstituicao, htmlAttributes: new { @class = "control-label" })
                <br />
                @Html.TextBoxFor(model => model.TipoInstituicao, new { @class = "form-control formfield", disabled = "disabled" })
            </div>
            <div class="form-group ">
                @Html.LabelFor(model => model.ExpectativaAtuacao, htmlAttributes: new { @class = "control-label" })
                <br />
                @Html.TextBoxFor(model => model.ExpectativaAtuacao, new { @class = "form-control formfield", disabled = "disabled" })
            </div>
            <div class="form-group ">
                @Html.LabelFor(model => model.MesmaAreaTrabalho, htmlAttributes: new { @class = "control-label" })
                <br />
                @Html.TextBoxFor(model => model.MesmaAreaTrabalho, new { @class = "form-control formfield", disabled = "disabled" })
            </div>
        </div>
        <div class="alert alert-warning" role="alert" id="vinculo_status">
            Não possui vínculo de trabalho
        </div>
        <br />
        <ul class="list-inline">
            <li>
                <h3>@Model.FINANCIADOR</h3>
            </li>
            <li>
                <button type="button" class="btn btn-primary btn-xs" data-toggle="modal" data-target="#financiador"><span><i class="fa fa-edit"></i>Editar</span></button>
            </li>
        </ul>
        <div class="form-group ">
            @Html.LabelFor(model => model.ProgramaFomento, htmlAttributes: new { @class = "control-label" })
            <br />
            @Html.TextBoxFor(model => model.ProgramaFomento, new { @class = "form-control formfield", disabled = "disabled" })
        </div>
        <div class="form-group ">
            @Html.LabelFor(model => model.NumeroMesesBolsa, htmlAttributes: new { @class = "control-label" })
            <br />
            @Html.TextBoxFor(model => model.NumeroMesesBolsa, new { @class = "form-control formfield", disabled = "disabled" })
        </div>
    }
}

<!-- Modal -->
<div id="vinculo" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("CadastraVinculoUsuarioAluno", "Usuario", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Editar Vínculo</h4>
                </div>
                        <div class="modal-body">
                            <div class="form-group" id="vinculo_control">
                                @Html.LabelFor(model => model.PossuiVinculo, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.RadioButtonFor(m => m.PossuiVinculo, "Sim") Sim
                                @Html.RadioButtonFor(m => m.PossuiVinculo, "Nao") Não
                            </div>
                            <hr />
                            <div id="vinculo_data" class="hidden">
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.EnderecoProfissional, htmlAttributes: new { @class = "control-label" })
                                    <br />
                                    @Html.TextBoxFor(model => model.EnderecoProfissional, new { @class = "form-control " })
                                </div>
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.Cargo, htmlAttributes: new { @class = "control-label" })
                                    <br />
                                    @Html.TextBoxFor(model => model.Cargo, new { @class = "form-control " })
                                </div>
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.TipoVinculo, htmlAttributes: new { @class = "control-label" })
                                    <br />
                                    @Html.TextBoxFor(model => model.TipoVinculo, new { @class = "form-control " })
                                </div>
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.TipoInstituicao, htmlAttributes: new { @class = "control-label" })
                                    <br />
                                    @Html.TextBoxFor(model => model.TipoInstituicao, new { @class = "form-control " })
                                </div>
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.ExpectativaAtuacao, htmlAttributes: new { @class = "control-label" })
                                    <br />
                                    @Html.TextBoxFor(model => model.ExpectativaAtuacao, new { @class = "form-control " })
                                </div>
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.MesmaAreaTrabalho, htmlAttributes: new { @class = "control-label" })
                                    <br />
                                    @Html.TextBoxFor(model => model.MesmaAreaTrabalho, new { @class = "form-control " })
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary"><span><i class="fa fa-edit"></i>Editar</span></button>
                            <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                        </div>
            }
        </div>
    </div>
</div>
<!-- Modal -->
<div id="financiador" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("CadastraFinanciadorUsuarioAluno", "Usuario", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Editar Financiador</h4>
                </div>
                        <div class="modal-body">
                            <div class="form-group ">
                                @Html.LabelFor(model => model.ProgramaFomento, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.TextBoxFor(model => model.ProgramaFomento, new { @class = "form-control " })
                            </div>
                            <div class="form-group ">
                                @Html.LabelFor(model => model.NumeroMesesBolsa, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.TextBoxFor(model => model.NumeroMesesBolsa, new { @class = "form-control ", @type = "number" })
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary"><span><i class="fa fa-edit"></i>Editar</span></button>
                            <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                        </div>
            }
        </div>
    </div>
</div>
<!-- Modal -->
<div id="email" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("CadastraEmailAluno", "Usuario", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Editar Email</h4>
                </div>
                        <div class="modal-body">
                            <div class="form-group ">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control " })
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary"><span><i class="fa fa-edit"></i>Editar</span></button>
                            <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                        </div>
            }
        </div>
    </div>
</div>
<!-- Modal -->
<div id="lattes" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("CadastraLattesAluno", "Usuario", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Editar Lattes</h4>
                </div>
                        <div class="modal-body">
                            <div class="form-group ">
                                @Html.LabelFor(model => model.LattesLink, htmlAttributes: new { @class = "control-label" })
                                <br />
                                @Html.TextBoxFor(model => model.LattesLink, new { @class = "form-control " })
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button id="idLattesEdit" submit" class="btn btn-primary"><span><i class="fa fa-edit"></i>Editar</span></button>
                            <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                        </div>
            }
        </div>
    </div>
</div>

<a href="/Home/Index" class="btn btn-large btn-info"><i class="fa fa-home"></i> Voltar a Home  </a>
<script src="~/Scripts/Custom/PerfilUsuario.js" type="text/javascript"></script>

